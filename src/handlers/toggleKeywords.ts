import { Keyword, KeywordModel } from '@/models/Keyword'
import { MyContext, MyConversation } from '@/helpers/bot'
import toggleKeywordMenu from '@/menus/toggleKeywordMenu'

export default async function toggleKeywords(
  conversation: MyConversation,
  ctx: MyContext
) {
  try {
    const keywords = await KeywordModel.find().exec()

    if (keywords.length === 0) {
      await ctx.reply('–ù–µ—Ç –∫–ª—é—á–µ–π.')
      return
    }

    const keywordList = keywords
      .map(
        (keyword, index) =>
          `${index + 1}) ${keyword.turn_on ? '‚úÖ' : 'üö´'} ${keyword.word} `
      )
      .join('\n')

    await ctx.reply(
      `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:\n${keywordList}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è\n\n–ü—Ä–∏–º–µ—Ä:\n1/3/4`
    )

    const { message } = await conversation.wait()

    if (!message?.text) {
      return console.log('Empty message')
    }

    const input = message.text.split('/').map((num) => parseInt(num, 10) - 1)

    if (input.some((index) => index < 0 || index >= keywords.length)) {
      await ctx.reply('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
      return
    }

    const selectedKeywords: Keyword[] = input.map((index) => keywords[index])
    const selectedKeywordsList = selectedKeywords
      .map(
        (keyword) =>
          `${keyword.turn_on ? '‚úÖ' : 'üö´'} ${keyword.word || 'unknown'} `
      )
      .join('\n')

    conversation.session.selectedKeywords = selectedKeywords

    await ctx.reply(
      `–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ –∫–ª—é—á–∏:\n${selectedKeywordsList}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∏—Ö?`,
      {
        reply_markup: toggleKeywordMenu,
      }
    )
  } catch (error) {
    console.error('Failed to handle toggle group command:', error)
    await ctx.reply('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  }
}
